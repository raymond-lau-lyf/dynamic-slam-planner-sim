<?xml version="1.0" encoding="utf-8"?>
<robot xmlns:xacro="http://ros.org/wiki/xacro"  name="tracked_vehicle">

    <xacro:property name="left_offset_y" value="0.287" /> 
    <xacro:property name="right_offset_y" value="-0.287" /> 
    <xacro:property name="swing_offset_x" value="-0.479" /> 

    <xacro:macro name="make_box_inertia" params="mass size_x size_y size_z">
        <inertial>
            <mass value="${mass}" />
            <inertia ixx="${mass * (size_y * size_y + size_z * size_z) / 12}" ixy="0" ixz="0" 
                     iyy="${mass * (size_z * size_z + size_x * size_x) / 12}" iyz="0" 
                     izz="${mass * (size_x * size_x + size_y * size_y) / 12}" />
        </inertial>
    </xacro:macro>

    <xacro:include filename="$(find mm_description)/urdf/tracked_base/single_track.urdf.xacro" />
    <xacro:include filename="$(find mm_description)/urdf/tracked_base/swing_arm.urdf.xacro" />

    <xacro:single_track prefix="left" offset_y="${left_offset_y}"/>
    <xacro:single_track prefix="right" offset_y="${right_offset_y}"/>
    <xacro:swing_arm mass="0.3" offset_x="${swing_offset_x}"/>

    <gazebo reference="vehicle_base_link">
        <material>Gazebo/DarkGrey</material>
    </gazebo>
    <gazebo reference="pusher_visual_left">
        <material>Gazebo/DarkGrey</material>
    </gazebo>
    <gazebo reference="pusher_visual_right">
        <material>Gazebo/DarkGrey</material>
    </gazebo>

    <link name="vehicle_base_link">
        <xacro:make_box_inertia mass="50" size_x="0.5" size_y="0.51" size_z="1" />
        <visual>
            <geometry>
                <!-- <box size="0.4 0.4 0.1" /> -->
                <mesh filename="package://mm_description/meshes/vehicle/base_meter.STL" />
            </geometry>
        </visual>

        <collision>
            <geometry>
                <box size="0.4 0.4 0.1" />
                <!-- <mesh filename="package://mm_description/meshes/vehicle/base_meter.STL" /> -->
            </geometry>
        </collision>
    </link>

    <joint name="left_track_joint" type="fixed">
        <origin xyz="0 ${left_offset_y} 0" rpy="0 0 0" />
        <parent link="vehicle_base_link" />
        <child link="left_body" />
    </joint>

    <joint name="right_track_joint" type="fixed">
        <origin xyz="0 ${right_offset_y} 0" rpy="0 0 0" />
        <parent link="vehicle_base_link" />
        <child link="right_body" />
    </joint>

    <link name="pusher_visual_left">
        <xacro:make_box_inertia mass="1" size_x="0.5" size_y="0.51" size_z="1" />
        <visual>
            <geometry>
                <box size="0.5 0.025  0.08" />
            </geometry>
        </visual>

        <collision>
            <geometry>
                <box size="0.5 0.025  0.08" />
            </geometry>
        </collision>
    </link>
    <link name="pusher_visual_right">
        <xacro:make_box_inertia mass="1" size_x="0.5" size_y="0.51" size_z="1" />
        <visual>
            <geometry>
                <box size="0.5 0.025  0.08" />
            </geometry>
        </visual>

        <collision>
            <geometry>
                <box size="0.5 0.025 0.08" />
            </geometry>
        </collision>
    </link>

    <joint name="pusher_visual_left_joint" type="fixed">
        <origin xyz="-0.27 0.12 0" rpy="0 0 0" />
        <parent link="vehicle_base_link" />
        <child link="pusher_visual_left" />
    </joint>
    <joint name="pusher_visual_right_joint" type="fixed">
        <origin xyz="-0.27 -0.12 0" rpy="0 0 0" />
        <parent link="vehicle_base_link" />
        <child link="pusher_visual_right" />
    </joint>

    <!-- virtual wheel base -->
    <xacro:include filename="$(find mm_description)/urdf/tracked_base/wheel_and_caster.xacro" />

    <xacro:property name="visual" value="false" />
    <xacro:property name="wheel_base_vertical_offset" value="${wheel_radius-0.08-0.01}" />
    <xacro:property name="dist_caster_front_back" value="0.9" /> <!-- distance between front caster and back caster-->
    <xacro:property name="dist_caster_left_right" value="${left_offset_y*2}" /> <!-- distance between front caster and back caster-->
    <xacro:wheel wheel_prefix="left" parent_link="vehicle_base_link" visual="${visual}">
        <origin xyz="0 ${left_offset_y} ${wheel_base_vertical_offset}" rpy="0 0 0" />
    </xacro:wheel>
    <xacro:wheel wheel_prefix="right" parent_link="vehicle_base_link" visual="${visual}">
        <origin xyz="0 ${right_offset_y} ${wheel_base_vertical_offset}" rpy="0 0 0" />
    </xacro:wheel>
    <xacro:caster caster_prefix="front_left" parent_link="vehicle_base_link" visual="${visual}" >
        <origin xyz="${dist_caster_front_back/2} ${dist_caster_left_right/2} ${wheel_base_vertical_offset - wheel_radius + caster_radius}" rpy="0 0 0" />
    </xacro:caster>
    <xacro:caster caster_prefix="front_right" parent_link="vehicle_base_link" visual="${visual}" >
        <origin xyz="${dist_caster_front_back/2} ${-dist_caster_left_right/2} ${wheel_base_vertical_offset - wheel_radius + caster_radius}" rpy="0 0 0" />
    </xacro:caster>
    <xacro:caster caster_prefix="back_left" parent_link="vehicle_base_link" visual="${visual}">
        <origin xyz="${-dist_caster_front_back/2} ${dist_caster_left_right/2} ${wheel_base_vertical_offset - wheel_radius + caster_radius}" rpy="0 0 0" />
    </xacro:caster>
    <xacro:caster caster_prefix="back_right" parent_link="vehicle_base_link" visual="${visual}">
        <origin xyz="${-dist_caster_front_back/2} ${-dist_caster_left_right/2} ${wheel_base_vertical_offset - wheel_radius + caster_radius}" rpy="0 0 0" />
    </xacro:caster>

    <!-- <link name="push_plate">
        <xacro:make_box_inertia mass="1" size_x="0.5" size_y="0.51" size_z="1" />
        <visual>
            <geometry>
                <box size="0.1 0.2 0.03" />
            </geometry>
        </visual>

        <collision>
            <geometry>
                <box size="0.1 0.2 0.03" />
            </geometry>
        </collision>
    </link> -->

    <joint name="push_plate_joint" type="fixed">
        <origin xyz="${swing_offset_x} 0 0" rpy="0 1 0" />
        <parent link="vehicle_base_link" />
        <child link="arm_connector" />
        <axis xyz="0 1 0"/>
    </joint>

    <!-- <transmission name="push_plate_joint_transmission">
        <type>transmission_interface/SimpleTransmission</type>
        <joint name="push_plate_joint">
            <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
        </joint>
        <actuator name="push_plate_joint_motor">
            <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
            <mechanicalReduction>1</mechanicalReduction>
        </actuator>
    </transmission> -->

    <!-- ros_control for gazebo, should only load once!! -->
    <!-- <gazebo>
        <plugin filename="libgazebo_ros_control.so" name="gazebo_ros_control">
            <robotSimType>gazebo_ros_control/DefaultRobotHWSim</robotSimType>
            <legacyModeNS>true</legacyModeNS>
        </plugin>
    </gazebo> -->
</robot>

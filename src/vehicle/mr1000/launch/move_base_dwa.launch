<launch>

  <arg name="no_static_map" default="true"/>
  <arg name="cmd_vel_topic" default="/mr1000_velocity_controller/cmd_vel" /> 
  <arg name="odom_topic" default="/odometry_gt" />
  <arg name="pc_topic" default="/velodyne_points"/>
  <arg name="base_global_planner" default="navfn/NavfnROS"/>
  <arg name="base_local_planner" default="dwa_local_planner/DWAPlannerROS"/>
  <!-- <arg name="base_local_planner" default="base_local_planner/TrajectoryPlannerROS"/> -->

  <node pkg="move_base" type="move_base" respawn="false" name="move_base" output="screen">

    <param name="base_global_planner" value="$(arg base_global_planner)"/>
    <param name="base_local_planner" value="$(arg base_local_planner)"/>  
    <rosparam file="$(find mr1000)/config/dwa/planner.yaml" command="load"/>

    <!-- observation sources located in costmap_common.yaml -->
    <rosparam file="$(find mr1000)/config/dwa/costmap_common.yaml" command="load" ns="global_costmap" />
    <rosparam file="$(find mr1000)/config/dwa/costmap_common.yaml" command="load" ns="local_costmap" />

    <!-- local costmap, needs size -->
    <rosparam file="$(find mr1000)/config/dwa/costmap_local.yaml" command="load" ns="local_costmap" />
    <param name="local_costmap/width" value="10.0"/>
    <param name="local_costmap/height" value="10.0"/>

    <!-- static global costmap, static map provides size -->
    <rosparam file="$(find mr1000)/config/dwa/costmap_global_static.yaml" command="load" ns="global_costmap" unless="$(arg no_static_map)"/>
    
    <!-- global costmap with laser, for odom_navigation_demo -->
    <rosparam file="$(find mr1000)/config/dwa/costmap_global_laser.yaml" command="load" ns="global_costmap" if="$(arg no_static_map)"/>
    <param name="global_costmap/width" value="100.0" if="$(arg no_static_map)"/>
    <param name="global_costmap/height" value="100.0" if="$(arg no_static_map)"/>
    <remap from="cmd_vel" to="$(arg cmd_vel_topic)"/>
    <!-- <remap from="odom" to="$(arg odom_topic)"/> -->
    <remap from="pc_topic" to="$(arg pc_topic)"/>
  </node>

</launch>
<?xml version="1.0"?>
<robot name="sensor_kinect" xmlns:xacro="http://ros.org/wiki/xacro">
  
  <xacro:property name="cam_px" value="-0.087" />
  <!--	<xacro:property name="cam_py" value="-0.0125" /> Y varies for different configurations. get sets in sensors_urdf -->
  <xacro:property name="cam_pz" value="0.2870" />
  <xacro:property name="cam_or" value="0" />
  <xacro:property name="cam_op" value="0" />
  <xacro:property name="cam_oy" value="0" />
  

  <xacro:property name="kinect_cam_py" value="-0.0125"/>
  <!-- Parameterised in part by the values in turtlebot_properties.urdf.xacro -->
  <xacro:macro name="sensor_kinect" params="name:=kinect parent frame:=camera_link hz:=30 *origin fov:=60 width:=640 height:=480">
    
    <joint name="camera_rgb_joint" type="fixed">
      <xacro:insert_block name="origin"/>
      <parent link="${parent}"/>
      <child link="${frame}" />
    </joint>

    <link name="${frame}">
      <visual>
       <origin xyz="0 0 0" rpy="0 0 ${M_PI/2}"/>
        <geometry>
          <mesh filename="package://wbot_description/meshes/kinect.dae"/>
        </geometry>
      </visual>
  	  <collision>
        <origin xyz="0.0 0.0 0.0" rpy="0 0 0"/>
  	    <geometry>
  	      <box size="0.07271 0.27794 0.073"/>
  	    </geometry>
  	  </collision>
      <inertial>
        <mass value="0.564" />
        <origin xyz="0 0 0" />
        <inertia ixx="0.003881243" ixy="0.0" ixz="0.0"
                 iyy="0.000498940" iyz="0.0"
                 izz="0.003879257" />
      </inertial>
    </link>

    <link name="camera_optical_frame"/>
    <joint name="camera_joint" type="fixed">
      <origin xyz="0 0 0" rpy="${-M_PI/2} 0 ${-M_PI/2}" />
      <parent link="${frame}"/>
      <child link="camera_optical_frame"/>
    </joint>  

    <!-- Kinect sensor for simulation -->
    <gazebo reference="${frame}">  
      <sensor type="depth" name="${name}">
        <visualize>true</visualize>
        <always_on>true</always_on>
        <update_rate>${hz}</update_rate>
        <camera>
          <!-- horizontal fov and vertical fov -->
          <horizontal_fov>${fov*M_PI/180.0}</horizontal_fov>
          <image>
            <format>B8G8R8</format>
            <width>${width}</width>
            <height>${height}</height>
          </image>
          <clip>
            <near>0.05</near>
            <far>100.0</far>
          </clip>
        </camera>
        <plugin name="kinect_camera_controller" filename="libgazebo_ros_openni_kinect.so">
          <cameraName>${name}</cameraName>
          <alwaysOn>true</alwaysOn>
          <imageTopicName>rgb/image_raw</imageTopicName>
          <depthImageTopicName>depth/image_raw</depthImageTopicName>
          <pointCloudTopicName>depth/points</pointCloudTopicName>
          <cameraInfoTopicName>rgb/camera_info</cameraInfoTopicName>
          <depthImageCameraInfoTopicName>depth/camera_info</depthImageCameraInfoTopicName>
          <!-- <frameName>camera_optical_frame</frameName> -->
          <frameName>camera_optical_frame</frameName>
          <!-- <baseline>0.1</baseline> -->
          <distortion_k1>0.0</distortion_k1>
          <distortion_k2>0.0</distortion_k2>
          <distortion_k3>0.0</distortion_k3>
          <distortion_t1>0.0</distortion_t1>
          <distortion_t2>0.0</distortion_t2>
          <pointCloudCutoff>0.4</pointCloudCutoff>
          <pointCloudCutoffMax>30.0</pointCloudCutoffMax>
        </plugin>
      </sensor>
    </gazebo>
  </xacro:macro>
</robot>
